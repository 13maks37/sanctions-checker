services:
  sanctions_bot:
    build: .
    container_name: sanctions_bot
    restart: unless-stopped
    env_file: .env
    depends_on:
      db_bot:
        condition: service_healthy
      redis_bot:
        condition: service_healthy
    volumes:
      - .:/bot
    networks:
      - sanctions-bot-network


  db_bot:
    image: postgres:16
    container_name: db_bot
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sanctions-bot-network

  redis_bot:
    image: redis:7
    container_name: redis_bot
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sanctions-bot-network

volumes:
  pg_data:
  redis_data:

networks:
  sanctions-bot-network:
    driver: bridge